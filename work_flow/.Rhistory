library(raster)
library(rgeos)
library(rgdal)
orange_river <- readOGR('/Users/AuerPower/Metis/git/crop-classification/data/intermediate', 'orange_river_crop_img')
img <- stack('/Users/AuerPower/Metis/git/crop-classification/data/intermediate/img_crop.tif')
### Extract img raster values to crop polygons
orange_river_buff <- buffer(orange_river, width=20)
### create points within polygons
samples <- spsample(orange_river_buff , n=1000, "random")
#coords <- coordinates(samples)
#coord_df <- data.frame(coords)
#names(coords) <- c('x', 'y')
#points <- SpatialPointsDataFrame(coords, data=coord_df, proj4string=crs(orange_river))
samples_img <- extract(img, samples, method='simple', sp=TRUE)
samples_crop <- extract(orange_river, samples_img, method='simple', sp=TRUE)
head(samples_crop)
samples_join <- merge(samples_crop, samples_img)
samples_join <- join(samples_crop, samples_img)
samples_img <- extract(img, samples, method='simple', sp=TRUE)
samples_img <- as.data.frame(samples_img)
samples_img <- extract(img, samples, method='simple', sp=TRUE)
samples_img <- as.data.frame(samples_img, xy=TRUE)
samples_crop <- extract(orange_river, samples, method='simple', sp=TRUE)
samples_crop <- as.data.frame(samples_crop, xy=TRUE)
View(samples_img)
View(samples_crop)
samples_join <- merge(samples_crop, samples_img)
View(samples_join)
samples_join <- cbind(samples_crop, samples_img)
View(samples_join)
samples_join <- SpatialPointsDataFrame(samples_join)
samples_join <- SpatialPointsDataFrame(coords=samples_join[c('x', 'y')], samples_join, proj4string=crs(orange_river))
head(samples_join)
writeOGR(samples_join, '/Users/AuerPower/Metis/git/crop-classification/data/intermediate', 'samples', driver = "ESRI Shapefile")
### Extract img raster values to crop polygons
orange_river_buff <- buffer(orange_river, width=20)
### create points within polygons
samples <- spsample(orange_river_buff , n=10000, "random")
#coords <- coordinates(samples)
#coord_df <- data.frame(coords)
#names(coords) <- c('x', 'y')
#points <- SpatialPointsDataFrame(coords, data=coord_df, proj4string=crs(orange_river))
### extract values from crop polygon and img bands
#samples2 <- extract(orange_river, samples, method='simple', sp=TRUE)
#samples_crop <- over(points, orange_river)
#samples_crop <- extract(orange_river, samples, method='simple', sp=TRUE)
samples_img <- extract(img, samples, method='simple', sp=TRUE)
samples_img <- as.data.frame(samples_img, xy=TRUE)
samples_crop <- extract(orange_river, samples, method='simple', sp=TRUE)
samples_crop <- as.data.frame(samples_crop, xy=TRUE)
samples_join <- cbind(samples_crop, samples_img)
samples_join <- SpatialPointsDataFrame(coords=samples_join[c('x', 'y')], samples_join, proj4string=crs(orange_river))
writeOGR(samples_join, '/Users/AuerPower/Metis/git/crop-classification/data/intermediate', 'samples', driver = "ESRI Shapefile" , overwrite_layer = TRUE)
samples_crop <- extract(orange_river, samples_img, method='simple', sp=TRUE)
samples_crop <- extract(orange_river, samples_img[c('x', 'y')], method='simple', sp=TRUE)
View(samples_crop)
head(orange_river)
orange_river_ras = rasterize(orange_river, img[[1]], 'Crop_Id_Ne')
plot(orange_river_ras)
img <- stack('/Users/AuerPower/Metis/git/crop-classification/data/intermediate/veg_indices.tiff')
plot(img[[6]])
img <- crop(img, orange_river)
plot(img[[5]])
plot(orange_river, add=TRUE)
orange_river_ras = rasterize(orange_river, img[[4]], 'Crop_Id_Ne')
samples_img <- extract(img, orange_river_ras, method='simple', sp=TRUE)
plot(orange_river_ras)
orange_river_points <- rasterToPoints(orange_river_ras, fun=NULL, spatial=TRUE)
samples_img <- extract(img, orange_river_points, method='simple', sp=TRUE)
head(samples_img)
unique(samples_img$layer)
plot(orange_river_ras)
samples_img_df <- as.data.frame(samples_img, xy=TRUE)
writeOGR(samples_img, '/Users/AuerPower/Metis/git/crop-classification/data/intermediate', 'samples', driver = "ESRI Shapefile" , overwrite_layer = TRUE)
write.csv(samples_img_df, '/Users/AuerPower/Metis/git/crop-classification/data/intermediate/samples_df.csv')
head(orange_river)
orange_river_ras <- rasterize(orange_river, img[[4]], 'Area Subregion')
orange_river_ras <- rasterize(orange_river, img[[4]], 'Subregion')
orange_river_region <- rasterize(orange_river, img[[4]], 'Subregion')
plot(orange_river_region)
head(orange_river_region)
orange_river_region@data
orange_river_region_points <- rasterToPoints(orange_river_region, fun=NULL, spatial=TRUE)
head(orange_river_region_points)
orange_river_merge <- merge(orange_river_points, orange_river_region_points)
writeOGR(orange_river_region_points, '/Users/AuerPower/Metis/git/crop-classification/data/intermediate',
'region_points', driver = "ESRI Shapefile")
orange_river_region <- rasterize(orange_river, img[[4]], 'Field_Id')
orange_river_region_points <- rasterToPoints(orange_river_region, fun=NULL, spatial=TRUE)
writeOGR(orange_river_region_points, '/Users/AuerPower/Metis/git/crop-classification/data/intermediate',
'fieldID_points', driver = "ESRI Shapefile")
samples_img <- extract(img, orange_river_points, method='bilinear', sp=TRUE)
samples_img_df <- as.data.frame(samples_img, xy=TRUE)
writeOGR(samples_img, '/Users/AuerPower/Metis/git/crop-classification/data/intermediate', 'samples', driver = "ESRI Shapefile" , overwrite_layer = TRUE)
write.csv(samples_img_df, '/Users/AuerPower/Metis/git/crop-classification/data/intermediate/samples_df.csv')
